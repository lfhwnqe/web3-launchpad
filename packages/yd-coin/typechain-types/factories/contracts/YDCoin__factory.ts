/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { YDCoin, YDCoinInterface } from "../../contracts/YDCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "burner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addToBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033604051806040016040528060078152602001662ca21021b7b4b760c91b81525060405180604001604052806002815260200161165160f21b81525081600390816200005f9190620003e5565b5060046200006e8282620003e5565b5050506001600160a01b038116620000a157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000ac81620000db565b50620000d533620000c06012600a620005c6565b620000cf90620f4240620005de565b6200012d565b6200060e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001595760405163ec442f0560e01b81526000600482015260240162000098565b62000167600083836200016b565b5050565b6001600160a01b03831660009081526006602052604090205460ff16158015620001ae57506001600160a01b03821660009081526006602052604090205460ff16155b620001fc5760405162461bcd60e51b815260206004820152601360248201527f4164647265737320626c61636b6c697374656400000000000000000000000000604482015260640162000098565b620002098383836200020e565b505050565b6001600160a01b0383166200023d578060026000828254620002319190620005f8565b90915550620002b19050565b6001600160a01b03831660009081526020819052604090205481811015620002925760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000098565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002cf57600280548290039055620002ee565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200033491815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200036c57607f821691505b6020821081036200038d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020957600081815260208120601f850160051c81016020861015620003bc5750805b601f850160051c820191505b81811015620003dd57828155600101620003c8565b505050505050565b81516001600160401b0381111562000401576200040162000341565b620004198162000412845462000357565b8462000393565b602080601f831160018114620004515760008415620004385750858301515b600019600386901b1c1916600185901b178555620003dd565b600085815260208120601f198616915b82811015620004825788860151825594840194600190910190840162000461565b5085821015620004a15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000508578160001904821115620004ec57620004ec620004b1565b80851615620004fa57918102915b93841c9390800290620004cc565b509250929050565b6000826200052157506001620005c0565b816200053057506000620005c0565b8160018114620005495760028114620005545762000574565b6001915050620005c0565b60ff841115620005685762000568620004b1565b50506001821b620005c0565b5060208310610133831016604e8410600b841016171562000599575081810a620005c0565b620005a58383620004c7565b8060001904821115620005bc57620005bc620004b1565b0290505b92915050565b6000620005d760ff84168362000510565b9392505050565b8082028115828204841417620005c057620005c0620004b1565b80820180821115620005c057620005c0620004b1565b610d15806200061e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806344337ea1116100ad57806395d89b411161007157806395d89b4114610249578063a9059cbb14610251578063dd62ed3e14610264578063f2fde38b1461029d578063f9f92be4146102b057600080fd5b806344337ea1146101d7578063537df3b6146101ea57806370a08231146101fd578063715018a6146102265780638da5cb5b1461022e57600080fd5b80632ff2e9dc116100f45780632ff2e9dc1461018c578063313ce5671461019657806332cb6b0c146101a557806340c10f19146101af57806342966c68146101c457600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102d3565b60405161013b9190610a34565b60405180910390f35b610157610152366004610a9e565b610365565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610ac8565b61037f565b61016b620f424081565b6040516012815260200161013b565b61016b6298968081565b6101c26101bd366004610a9e565b6103a3565b005b6101c26101d2366004610b04565b610471565b6101c26101e5366004610b1d565b610509565b6101c26101f8366004610b1d565b610535565b61016b61020b366004610b1d565b6001600160a01b031660009081526020819052604090205490565b6101c261055e565b6005546040516001600160a01b03909116815260200161013b565b61012e610572565b61015761025f366004610a9e565b610581565b61016b610272366004610b3f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101c26102ab366004610b1d565b61058f565b6101576102be366004610b1d565b60066020526000908152604090205460ff1681565b6060600380546102e290610b72565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90610b72565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b6000336103738185856105cd565b60019150505b92915050565b60003361038d8582856105df565b61039885858561065d565b506001949350505050565b6103ab6106bc565b6103b76012600a610ca6565b6103c49062989680610cb5565b816103ce60025490565b6103d89190610ccc565b11156104205760405162461bcd60e51b815260206004820152601260248201527145786365656473206d617820737570706c7960701b60448201526064015b60405180910390fd5b61042a82826106e9565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42738260405161046591815260200190565b60405180910390a25050565b336000908152602081905260409020548111156104c75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610417565b6104d13382610723565b60405181815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250565b6105116106bc565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b61053d6106bc565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6105666106bc565b6105706000610759565b565b6060600480546102e290610b72565b60003361037381858561065d565b6105976106bc565b6001600160a01b0381166105c157604051631e4fbdf760e01b815260006004820152602401610417565b6105ca81610759565b50565b6105da83838360016107ab565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610657578181101561064857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610417565b610657848484840360006107ab565b50505050565b6001600160a01b03831661068757604051634b637e8f60e11b815260006004820152602401610417565b6001600160a01b0382166106b15760405163ec442f0560e01b815260006004820152602401610417565b6105da838383610880565b6005546001600160a01b031633146105705760405163118cdaa760e01b8152336004820152602401610417565b6001600160a01b0382166107135760405163ec442f0560e01b815260006004820152602401610417565b61071f60008383610880565b5050565b6001600160a01b03821661074d57604051634b637e8f60e11b815260006004820152602401610417565b61071f82600083610880565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166107d55760405163e602df0560e01b815260006004820152602401610417565b6001600160a01b0383166107ff57604051634a1406b160e11b815260006004820152602401610417565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561065757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161087291815260200190565b60405180910390a350505050565b6001600160a01b03831660009081526006602052604090205460ff161580156108c257506001600160a01b03821660009081526006602052604090205460ff16155b6109045760405162461bcd60e51b81526020600482015260136024820152721059191c995cdcc8189b1858dadb1a5cdd1959606a1b6044820152606401610417565b6105da8383836001600160a01b03831661093557806002600082825461092a9190610ccc565b909155506109a79050565b6001600160a01b038316600090815260208190526040902054818110156109885760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610417565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166109c3576002805482900390556109e2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a2791815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610a6157858101830151858201604001528201610a45565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a9957600080fd5b919050565b60008060408385031215610ab157600080fd5b610aba83610a82565b946020939093013593505050565b600080600060608486031215610add57600080fd5b610ae684610a82565b9250610af460208501610a82565b9150604084013590509250925092565b600060208284031215610b1657600080fd5b5035919050565b600060208284031215610b2f57600080fd5b610b3882610a82565b9392505050565b60008060408385031215610b5257600080fd5b610b5b83610a82565b9150610b6960208401610a82565b90509250929050565b600181811c90821680610b8657607f821691505b602082108103610ba657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610bfd578160001904821115610be357610be3610bac565b80851615610bf057918102915b93841c9390800290610bc7565b509250929050565b600082610c1457506001610379565b81610c2157506000610379565b8160018114610c375760028114610c4157610c5d565b6001915050610379565b60ff841115610c5257610c52610bac565b50506001821b610379565b5060208310610133831016604e8410600b8410161715610c80575081810a610379565b610c8a8383610bc2565b8060001904821115610c9e57610c9e610bac565b029392505050565b6000610b3860ff841683610c05565b808202811582820484141761037957610379610bac565b8082018082111561037957610379610bac56fea2646970667358221220fb72925e1580d49ab35e449ac93dcdcbf2d6816d416d1c95494ecd503cc9e01a64736f6c63430008140033";

type YDCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YDCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YDCoin__factory extends ContractFactory {
  constructor(...args: YDCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      YDCoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YDCoin__factory {
    return super.connect(runner) as YDCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YDCoinInterface {
    return new Interface(_abi) as YDCoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): YDCoin {
    return new Contract(address, _abi, runner) as unknown as YDCoin;
  }
}
